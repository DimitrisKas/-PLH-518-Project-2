version: "3.8"
services:
  
  apache-php:
    # image: "httpd:2.4"
    build:
      context: './apache_php'
    restart: always
    ports: 
      - 80:80
    volumes:
        # - ./apache_php/httpd.conf:/usr/local/apache2/conf/httpd.conf
        - ./apache_php/app/:/var/www/html/
    networks:
      proj2-net:
  
  mysql:
    # image: "mysql"
    build:
      context: './mysql'
    restart: always
    volumes:
       - mysql-storage:/var/lib/mysql
    ports: 
      - 3306:3306
    networks:
      proj2-net:
    environment:
      MYSQL_ROOT_PASSWORD: 1234securePass

  # MySQL db management
  adminer:
      image: adminer
      restart: always
      ports:
        - 8080:8080
      networks:
        proj2-net:


  db-service:
      build:
        context: './database_service'
      volumes:
        - ./database_service/httpd.conf:/usr/local/apache2/conf/httpd.conf
        - ./database_service/app/:/var/www/html/
      ports:
        - 9003:80

  mongo:
     image: mongo
#     build:
#       context: './mongo'
#       dockerfile: mongo_dockerfile
     ports:
       - 27017:27017
     volumes:
       - ./mongo/db:/data/db
     networks:
       proj2-net:
     environment:
       MONGO_INITDB_ROOT_USERNAME: root
       MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
     image: mongo-express
     depends_on:
       - mongo
     ports:
       - 8082:8082
     networks:
        proj2-net:
     environment:
       ME_CONFIG_MONGODB_ADMINUSERNAME: root
       ME_CONFIG_MONGODB_ADMINPASSWORD: example

  # keyrock: // Keyrock IDM
  #   image: "fiware/idm"
  
  # ocb:    // Orion Context Broken
  #   image: "fiware/orion"
  #   links:
  #    - mongo
  #    ports:
  #    - "1026:1026"
  
  # proxy:  // PEP Proxy Wilma
  #   image: "fiware/pep-proxy"
  
volumes:
  mysql-storage:

networks:
  proj2-net:
    external: true